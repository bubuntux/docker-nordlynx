#!/usr/bin/with-contenv bash

network_found=false
iface=${INTERFACE:-eth0}
interfaces=($(ip link | awk -F': ' '$0 !~ "lo|wg|tun|tap|^[^0-9]"{print $2;getline}' | cut -d@ -f1))
no_connenction_retry=${NO_CONNECTION_RETRY:-5}
if [[ ! " ${interfaces[*]} " =~ " $iface " ]]; then
    interfaces+=("$iface")
fi
for interface in "${interfaces[@]}"; do
  inet="$(ip -o addr show dev "${interface}" | awk '$3 == "inet6" {print $4; exit}')"
  if [[ -z "$inet" ]]; then
    continue
  fi
  if [ "$network_found" = false ]; then
    ip6tables-legacy -F
    ip6tables-legacy -X
  fi
  echo "[$(date -Iseconds)] Enabling connection to ${interface} ${inet}"
  ip6tables-legacy -A INPUT -i "$interface" -s "${inet}" -j ACCEPT
  ip6tables-legacy -A OUTPUT -o "$interface" -d "${inet}" -j ACCEPT
  ip6tables-legacy -A FORWARD -i "$interface" -d "${inet}" -j ACCEPT
  ip6tables-legacy -A FORWARD -i "$interface" -s "${inet}" -j ACCEPT
  network_found=true
done

if [ "$network_found" = false ]; then
  echo "[$(date -Iseconds)] No interface network6 detected"
  exit
fi

echo "[$(date -Iseconds)] Enabling connection to secure interfaces"

ip6tables-legacy -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
ip6tables-legacy -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
ip6tables-legacy -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

ip6tables-legacy -A INPUT -i lo -j ACCEPT
ip6tables-legacy -A OUTPUT -o lo -j ACCEPT
ip6tables-legacy -A FORWARD -i lo -j ACCEPT

ip6tables-legacy -A OUTPUT -o wg+ -j ACCEPT
ip6tables-legacy -t nat -A POSTROUTING -o wg+ -j MASQUERADE

ip6tables-legacy -A OUTPUT -o "$iface" -p udp -m udp --dport 53 -j ACCEPT
ip6tables-legacy -A OUTPUT -o "$iface" -p udp -m udp --dport 51820 -j ACCEPT
while true; do
  ip6tables-legacy -A OUTPUT -o "$iface" -d api.nordvpn.com -p tcp --dport 443 -j ACCEPT\
    || {
      echo "Seems like we have no internet connection. Retrying in $no_connenction_retry seconds..."
      sleep ${no_connenction_retry}
      continue
    }
  break
done
